<?php

namespace frontend\controllers;

use Api\Alipay\Alipay;
use Api\Sina\Sina;
use Api\Tencent\QQ;
use common\components\Log;
use common\components\Message;
use common\models\AgentMember;
use common\models\Member;
use common\models\MemberVerify;
use yii\helpers\Url;
use yii\web\Cookie;
use yii\web\HttpException;

/**
 * 第三方绑定账号管理
 */
class BindController extends BaseController
{

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->validLogin();
    }

    public function actionIndex()
    {
        throw new HttpException(405);
    }

    /**
     * 获取绑定列表
     */
    public function actionList()
    {
        return $this->responseJson(Message::SUCCESS, Message::SUCCESS_MSG);
    }

    /**
     * 微信登录
     * @return mixed
     */
    public function actionWithWx()
    {
        //前端回调地址页面
        $callback = \Yii::$app->request->get('callback', '/home');
        $error_url = WEB_DOMAIN . '/login?callback=' . urlencode($callback);
        if (!isWeixin()) {
            $this->redirect($error_url)->send();
            die;
        }
        //获取微信网页用户授权信息
        try {
            $user_info = $this->_getWxUserInfo();
        } catch (\Exception $e) {
            \Yii::error($e->getMessage());
            $user_info = null;
        }
        if (empty($user_info)) {
            $this->redirect($error_url)->send();
            die;
        }
        //获取会员信息
        $model_member = new Member();
        $member = $model_member->getMemberByWxid($user_info['openid']);
        if (!$member) {
            //自动注册
            $result = $model_member->quickRegisterWx($user_info, SITEID);
            if (!$result) {
                \Yii::error('Model Valid:' . json_encode($model_member->getErrors()));
                $this->redirect($error_url . '&error_msg=微信登录失败，请重试')->send();
                die;
            }
            $member = Member::instance()->getMemberByWxid($user_info['openid']);
        }
        $data = $this->_afterLogin($member);
        if (!$data) {
            $error = Message::getFirstMessage();
            $this->redirect($error_url . '&error_msg=' . $error['message'])->send();
            die;
        }
        $back = buildUrl(WEB_DOMAIN . $callback, ['_third' => urlencode(base64_encode(json_encode($data)))]);
        $this->redirect($back)->send();
        die;
    }

    /**
     * 微博登录
     */
    public function actionWithSina()
    {
        //前端回调地址页面
        $callback = \Yii::$app->request->get('callback', '/home');
        $error_url = WEB_DOMAIN . '/login?callback=' . urlencode($callback);
        //获取微博网页用户授权信息
        try {
            $user_info = Sina::getUserInfo();
        } catch (\Exception $e) {
            \Yii::error($e->getMessage());
            $user_info = null;
        }
        if (empty($user_info) || !isset($user_info['id'])) {
            $this->redirect($error_url)->send();
            die;
        }
        //获取会员信息
        $model_member = new Member();
        $member = $model_member->getMemberBySinaid($user_info['id']);
        if (!$member) {
            //自动注册
            $result = $model_member->quickRegisterSina($user_info, SITEID);
            if (!$result) {
                \Yii::error('Model Valid:' . json_encode($model_member->getErrors()));
                $this->redirect($error_url . '&error_msg=微博登录失败，请重试')->send();
                die;
            }
            $member = Member::instance()->getMemberBySinaid($user_info['id']);
        }
        $data = $this->_afterLogin($member);
        if (!$data) {
            $error = Message::getFirstMessage();
            $this->redirect($error_url . '&error_msg=' . $error['message'])->send();
            die;
        }
        $back = buildUrl(WEB_DOMAIN . $callback, ['_third' => urlencode(base64_encode(json_encode($data)))]);
        $this->redirect($back)->send();
        die;
    }

    /**
     * QQ登录
     */
    public function actionWithQq()
    {

        //前端回调地址页面
        $callback = \Yii::$app->request->get('callback');
        //QQ会强制把callback给去了
        if ($callback) {
            \Yii::$app->session->set('callback', $callback);
        } else {
            $callback = \Yii::$app->session->get('callback', '/home');
        }
        $error_url = WEB_DOMAIN . '/login?callback=' . urlencode($callback);
        //获取微博网页用户授权信息
        try {
            $user_info = QQ::getUserInfo();
        } catch (\Exception $e) {
            \Yii::error($e->getMessage());
            $user_info = null;
        }

        \Yii::debug($user_info);
        if (empty($user_info) || !isset($user_info['ret']) || $user_info['ret'] !== 0) {
            $this->redirect($error_url)->send();
            die;
        }
        //获取会员信息
        $model_member = new Member();
        $member = $model_member->getMemberByQQid($user_info['openid']);
        if (!$member) {
            //自动注册
            $result = $model_member->quickRegisterQQ($user_info, SITEID);
            if (!$result) {
                \Yii::error('Model Valid:' . json_encode($model_member->getErrors()));
                $this->redirect($error_url . '&error_msg=QQ登录失败，请重试')->send();
                die;
            }
            $member = Member::instance()->getMemberByQQid($user_info['openid']);
        }
        $data = $this->_afterLogin($member);
        if (!$data) {
            $error = Message::getFirstMessage();
            $this->redirect($error_url . '&error_msg=' . $error['message'])->send();
            die;
        }
        $back = buildUrl(WEB_DOMAIN . $callback, ['_third' => urlencode(base64_encode(json_encode($data)))]);
        $this->redirect($back)->send();
        die;
    }

    /**
     * 支付宝登录
     */
    public function actionWithAlipay()
    {
        //前端回调地址页面
        $callback = \Yii::$app->request->get('callback');
        if ($callback) {
            \Yii::$app->session->set('callback', $callback);
        } else {
            $callback = \Yii::$app->session->get('callback', '/home');
        }
        $error_url = WEB_DOMAIN . '/login?callback=' . urlencode($callback);
        //获取微博网页用户授权信息
        try {
            $user_info = Alipay::getUserInfo();
        } catch (\Exception $e) {
            \Yii::error($e->getMessage());
            $user_info = null;
        }
        \Yii::debug($user_info);
        if (empty($user_info)) {
            $this->redirect($error_url)->send();
            die;
        }
        //获取会员信息
        $model_member = new Member();
        $member = $model_member->getMemberByAlipayid($user_info['user_id']);
        if (!$member) {
            //自动注册
            $result = $model_member->quickRegisterAlipay($user_info);
            if (!$result) {
                \Yii::error('Model Valid:' . json_encode($model_member->getErrors()));
                $this->redirect($error_url . '&error_msg=支付登录失败，请重试')->send();
                die;
            }
            $member = Member::instance()->getMemberByAlipayid($user_info['user_id']);
        }
        $data = $this->_afterLogin($member);
        if (!$data) {
            $error = Message::getFirstMessage();
            $this->redirect($error_url . '&error_msg=' . $error['message'])->send();
            die;
        }
        $back = buildUrl(WEB_DOMAIN . $callback, ['_third' => urlencode(base64_encode(json_encode($data)))]);
        $this->redirect($back)->send();
        die;
    }

    /**
     * 淘宝登录
     */
    public function actionWithTaobao()
    {
        //前端回调地址页面
        $callback = \Yii::$app->request->get('callback');
        if ($callback) {
            \Yii::$app->session->set('callback', $callback);
        } else {
            $callback = \Yii::$app->session->get('callback', '/home');
        }
        $error_url = WEB_DOMAIN . '/login?callback=' . urlencode($callback);
        $this->redirect($error_url)->send();
        die;
        //获取微博网页用户授权信息
        try {
            $user_info = Alipay::getUserInfo();
        } catch (\Exception $e) {
            \Yii::error($e->getMessage());
            $user_info = null;
        }
        \Yii::debug($user_info);
        if (empty($user_info)) {
            $this->redirect($error_url)->send();
            die;
        }
        //获取会员信息
        $model_member = new Member();
        $member = $model_member->getMemberByAlipayid($user_info['user_id']);
        if (!$member) {
            //自动注册
            $result = $model_member->quickRegisterAlipay($user_info);
            if (!$result) {
                \Yii::error('Model Valid:' . json_encode($model_member->getErrors()));
                $this->redirect($error_url . '&error_msg=支付登录失败，请重试')->send();
                die;
            }
            $member = Member::instance()->getMemberByAlipayid($user_info['user_id']);
        }
        $data = $this->_afterLogin($member);
        if (!$data) {
            $error = Message::getFirstMessage();
            $this->redirect($error_url . '&error_msg=' . $error['message'])->send();
            die;
        }
        $back = buildUrl(WEB_DOMAIN . $callback, ['_third' => urlencode(base64_encode(json_encode($data)))]);
        $this->redirect($back)->send();
        die;
    }

    /**
     * 获取微信用户信息
     * @return bool|null|\yii\web\Response
     */
    private function _getWxUserInfo()
    {
        $user_info = null;
        //重试次数
        $retry = \Yii::$app->request->get('retry', 0);
        //约定好的缓存健值（cache_name = wx_auth_key）
        $cache_key = \Yii::$app->request->get('auth_key', '');
        if ($cache_key) {
            $user_info = cache('wx_' . $cache_key);
        }
        if (empty($cache_key) || empty($user_info)) {
            if ($retry > 1) {
                return null;
            }
            $auth_return = Url::current(['retry' => ++$retry], true);
            $authorize_url = WX_DOMAIN . '/authorize/user?auth_return=' . urlencode($auth_return);
            $this->redirect($authorize_url)->send();
            die;
        }
        return $user_info;
    }


    /**
     * 登录后续处理
     * @param $member
     * @return mixed
     */
    private function _afterLogin($member)
    {
        if (!$member) {
            return Message::appendMessage('登录失败。请重试', Message::ERROR);
        }

        if (!$member->member_state) {
            return Message::appendMessage('您的账号已被冻结，暂无法登录', Message::ERROR);
        }

        //将离线购物车数据写入会员
        $model_member = new Member();
        $result = $model_member->writeCart($member, $this->sessionid);
        if (!$result) {
            \Yii::error($model_member->getErrors());
        }
        //将代理信息写入会员
        $model_agent = new AgentMember();
        $result = $model_agent->writeMember($member, $this->sessionid);
        if (!$result) {
            \Yii::error($model_agent->getErrors());
        }
        //取登录信息并更新会员
        $data = $model_member->getLoginData($member);
        if (!$data) {
            \Yii::error('Refresh Login:' . json_encode($model_member->getErrors()));
            return Message::appendMessage('登录失败，请重试', Message::MODEL_ERROR);
        }
        return $data;
    }

}
